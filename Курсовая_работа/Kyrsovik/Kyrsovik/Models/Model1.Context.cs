//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kyrsovik.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Polina_ZlobinaEntities : DbContext
    {
        public Polina_ZlobinaEntities()
            : base("name=Polina_ZlobinaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Catygories> Catygories { get; set; }
        public virtual DbSet<Owners> Owners { get; set; }
        public virtual DbSet<Position> Position { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Sales> Sales { get; set; }
        public virtual DbSet<Staff> Staff { get; set; }
        public virtual DbSet<Statuses> Statuses { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Insert_User(Nullable<int> iD_position, string fIO, string phone, string e_mail, Nullable<int> password, string adress, string passpost, string requisites)
        {
            var iD_positionParameter = iD_position.HasValue ?
                new ObjectParameter("ID_position", iD_position) :
                new ObjectParameter("ID_position", typeof(int));
    
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var e_mailParameter = e_mail != null ?
                new ObjectParameter("E_mail", e_mail) :
                new ObjectParameter("E_mail", typeof(string));
    
            var passwordParameter = password.HasValue ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(int));
    
            var adressParameter = adress != null ?
                new ObjectParameter("Adress", adress) :
                new ObjectParameter("Adress", typeof(string));
    
            var passpostParameter = passpost != null ?
                new ObjectParameter("Passpost", passpost) :
                new ObjectParameter("Passpost", typeof(string));
    
            var requisitesParameter = requisites != null ?
                new ObjectParameter("Requisites", requisites) :
                new ObjectParameter("Requisites", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Insert_User", iD_positionParameter, fIOParameter, phoneParameter, e_mailParameter, passwordParameter, adressParameter, passpostParameter, requisitesParameter);
        }
    
        public virtual ObjectResult<LoginByUsernamePassword_Result> LoginByUsernamePassword(string e_mail, string password)
        {
            var e_mailParameter = e_mail != null ?
                new ObjectParameter("E_mail", e_mail) :
                new ObjectParameter("E_mail", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoginByUsernamePassword_Result>("LoginByUsernamePassword", e_mailParameter, passwordParameter);
        }
    }
}
